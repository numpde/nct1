# RA, 2021-05-18

# https://stackoverflow.com/questions/64570647/google-drive-api-python-service-account-example
# https://developers.google.com/analytics/devguides/reporting/core/v4/quickstart/service-py
# https://developers.google.com/sheets/api/quickstart/python

import itertools
import contextlib

import pandas as pd

from bugs import *
from twig import log
from tcga.utils import Now

from oauth2client.service_account import ServiceAccountCredentials
from googleapiclient.discovery import build

out_dir = unlist1(Path(__file__).resolve().parent.parent.glob("scenarios"))


def load() -> pd.DataFrame:
    SCOPES = ['https://www.googleapis.com/auth/spreadsheets.readonly']
    KEY_FILE_LOCATION = 'nct1-20210518-24b395f048ea.json'

    creds = ServiceAccountCredentials.from_json_keyfile_name(KEY_FILE_LOCATION, SCOPES)

    # The ID and range of a sample spreadsheet.
    SAMPLE_SPREADSHEET_ID = '1rr0lp6ByU1bENysPyk0qLXYwMEmwEN0BVQYw7H2Hp30'
    SAMPLE_RANGE_NAME = 'Sheet1!A1:ZZ'

    service = build('sheets', 'v4', credentials=creds)

    # Call the Sheets API
    sheet = service.spreadsheets()
    result = sheet.values().get(spreadsheetId=SAMPLE_SPREADSHEET_ID, range=SAMPLE_RANGE_NAME).execute()

    df = pd.DataFrame(itertools.zip_longest(*result['values'], fillvalue='')).T

    df.columns = df.iloc[0]
    df = df.drop(index=0)

    return df


def print_scenario(df, c):
    log.info(f"Making scenario: {c}.")

    print(f'% Autogenerated by {relpath(__file__)} on {Now()}.')
    print(f'')

    for (i, n, p, u, v) in zip(df.Item, df.Name, df.Parameter, df.Units, df[c]):
        if (i == ""):
            pass
        elif (i == "Reaction"):
            print(
                *[
                    f'r = m.Reactions({{m.Reactions.Name}} == "{n}");',
                    f'k = r.KineticLaw;',
                    f'p = k.Parameters({{k.Parameters.Name}} == "{p}");',
                    f'assert(p.Units == "{u}");',
                    f'p.Value = {v};',
                    f'',
                ],
                sep='\n'
            )
        elif (i == "Species"):
            assert (p == "Value")
            print(
                *[
                    f's = m.Species({{m.Species.Name}} == "{n}");',
                    f'assert(s.Units == "{u}");',
                    f's.Value = {v};',
                    f'',
                ],
                sep='\n'
            )
        else:
            log.warning(f"Unknown item: `{i}`.")


def process(df: pd.DataFrame):
    for c in df.columns[6:]:
        if c:
            with (out_dir / f"{c}.m").open(mode='w') as fd:
                with contextlib.redirect_stdout(fd):
                    print_scenario(df, c)


def main():
    df = load()

    df.to_csv(out_dir / "scenarios.csv", sep='\t', index=False)
    process(df)


if __name__ == '__main__':
    main()
